import unittest

from prexploit.dataset import build_dataset, load_exploit_cves
from prexploit.model import (make_onlinedata, validate,
                             make_batchdata, build_model)
from prexploit.util.report import table_report, Report


class TestTrain(unittest.TestCase):

    def setUp(self):
        self.path_nvd = "./tests/fixtures/rawdata/nvd"
        self.path_cwe = "./data/cwe.json"
        self.path_exp_cves = "./tests/fixtures/rawdata/exploited_cves.txt"
        self.dataset = build_dataset(self.path_nvd, self.path_cwe)
        self.exploited_cves = load_exploit_cves(self.path_exp_cves)

    def test_validate(self):
        online_dataset = make_onlinedata(self.dataset, self.exploited_cves)
        self.assertEqual(type(online_dataset), list)
        self.assertNotEqual(len(online_dataset), 0)

        report = validate(online_dataset)
        self.assertEqual(type(report), Report)
        table = table_report([report], [''])
        self.assertEqual(type(table), str)

    def test_train(self):
        batch_dataset = make_batchdata(self.dataset,
                                       self.exploited_cves)
        vectorizer, classifier = build_model(batch_dataset)

        cves, x, y = batch_dataset
        x = vectorizer.transform(x)
        explanations = \
            classifier.batch_explain(x, vectorizer.get_feature_names())
        pred_y = classifier.predict_prob(x)

        self.assertEqual(len(cves), len(pred_y))
        self.assertEqual(len(pred_y), len(explanations))


if __name__ == '__main__':
    unittest.main()
